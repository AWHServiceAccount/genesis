using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Net;
using System.Web.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Web.Http;
using ~DEPS_NAMESPACE~;
using ~DEPS_SERVICE_NAMESPACE~;
using ~DEPS_MODEL_NAMESPACE~;

namespace ~NAMESPACE~
{
    [ApiController]
    [ApiVersion("2")]
    [RoutePrefix("api/v{version:apiVersion}/[controller]")]
    public class ~OBJECT_NAME~Controller : BaseApiController
    {
~INJECTION_MEMBERS~

		public ~OBJECT_NAME~Controller(
~INJECTIONS~
		) 
		{
~INJECTION_ASSIGNMENT~
		}
		
        // GET api/v#/~OBJECT_NAME~
        [HttpGet]
        public IHttpActionResult Get()
        {
            return Ok(new ~OBJECT_NAME~[] { default(~OBJECT_NAME~), default(~OBJECT_NAME~) });
        }

        // GET api/v#/~OBJECT_NAME~/5
        [HttpGet("{id}")]
        public IHttpActionResult Get(int id)
        {
            return Ok(new ~OBJECT_NAME~());
        }

        // POST api/v#/~OBJECT_NAME~
        [HttpPost]
        public IHttpActionResult Post([FromBody] ~OBJECT_NAME~ obj)
        {
			if (!ModelState.IsValid)
            {
                return BadRequest(ModelState);
            }

			return Ok(obj.Id);
        }

        // PUT api/v#/~OBJECT_NAME~/5
        [HttpPut("{id}")]
        public IHttpActionResult Put([FromUrl] int id, [FromBody] ~OBJECT_NAME~ obj)
        {
			if (!ModelState.IsValid)
            {
                return BadRequest(ModelState);
            }

			return Ok(id);
        }

        // DELETE api/v#/~OBJECT_NAME~/5
        [HttpDelete("{id}")]
        public IHttpActionResult Delete([FromUrl] int id)
        {
			return Ok(id);
        }
    }
}